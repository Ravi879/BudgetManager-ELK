input{

	file{
		#//path => "D:/F/pr/ELK-pr/cnvs/test-s1.csv"
		path => "D:/F/pr/ELK-pr/BudgetManager/app-logs.log"
		start_position => "beginning"
		sincedb_path => NUL
		codec => multiline {
			pattern => "^\s\s\s%{TIMESTAMP_ISO8601}|^%{IP}"
			negate => true
			what => "previous"
    	}
	}

}


filter{
	grok {
		match => {
		   message => "%{TIMESTAMP_ISO8601:datetime}\s+%{LOGLEVEL:logLevel}\s+---\s+\[%{DATA:thread}\]\s+%{DATA:class}\s+:\s+%{DATA:mydata}\n(\t)?%{GREEDYDATA:stack}"
		}
	}

	mutate {
		remove_field => ["path"]
	}

	if "_grokparsefailure" in [tags] {

		grok {
			match => {
				message => "%{IP:clientip}\s+%{WORD:method}\s+%{URIPATHPARAM:path}\s+%{TIMESTAMP_ISO8601:datetime}\s+%{LOGLEVEL:logLevel}\s+---\s+\[%{DATA:thread}\]\s+%{DATA:class}\s+:\s+%{USERNAME:action}\s+--\s+%{USERNAME:actionKey}\s+--\s+%{GREEDYDATA:msg}"
			}

			overwrite => [
				"path"
			]
		}

		kv {
			source => "msg"
		}

		geoip {
			source => "clientip"
		}

	}

	date {
		timezone => "UTC"
    	match => ["datetime" , "yyyy-MM-dd'T'HH:mm:ss','SSS'Z'", "ISO8601"]
    	target => "@timestamp"
    	remove_field => [ "datetime", "timestamp", "host", "tags" ]
	}

}


output{

	stdout {
		codec => rubydebug
	}

	elasticsearch {
		hosts => "localhost"
		index => "tmp-budget-manager"
	}

}
